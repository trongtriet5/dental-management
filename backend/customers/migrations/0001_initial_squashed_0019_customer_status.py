# Generated by Django 4.2.7 on 2025-09-19 03:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def create_sample_services(apps, schema_editor):
    Service = apps.get_model('customers', 'Service')
    
    services_data = [
        {
            'name': 'Khám tổng quát',
            'description': 'Khám tổng quát răng miệng',
            'price': 200000,
            'duration_minutes': 30,
            'level_number': 1,
            'is_active': True
        },
        {
            'name': 'Cạo vôi răng',
            'description': 'Cạo vôi răng và làm sạch',
            'price': 300000,
            'duration_minutes': 45,
            'level_number': 1,
            'is_active': True
        },
        {
            'name': 'Trám răng',
            'description': 'Trám răng sâu',
            'price': 500000,
            'duration_minutes': 60,
            'level_number': 2,
            'is_active': True
        },
        {
            'name': 'Nhổ răng',
            'description': 'Nhổ răng không phức tạp',
            'price': 800000,
            'duration_minutes': 30,
            'level_number': 2,
            'is_active': True
        },
        {
            'name': 'Bọc răng sứ',
            'description': 'Bọc răng sứ thẩm mỹ',
            'price': 2500000,
            'duration_minutes': 120,
            'level_number': 3,
            'is_active': True
        },
        {
            'name': 'Niềng răng',
            'description': 'Niềng răng chỉnh nha',
            'price': 15000000,
            'duration_minutes': 180,
            'level_number': 3,
            'is_active': True
        }
    ]
    
    for service_data in services_data:
        Service.objects.get_or_create(
            name=service_data['name'],
            defaults=service_data
        )

def reverse_create_sample_services(apps, schema_editor):
    Service = apps.get_model('customers', 'Service')
    Service.objects.filter(
        name__in=[
            'Khám tổng quát',
            'Cạo vôi răng', 
            'Trám răng',
            'Nhổ răng',
            'Bọc răng sứ',
            'Niềng răng'
        ]
    ).delete()

class Migration(migrations.Migration):

    replaces = [('customers', '0001_initial'), ('customers', '0002_initial'), ('customers', '0003_service_level'), ('customers', '0004_alter_service_options_service_level_number_and_more'), ('customers', '0005_customer_preferred_service'), ('customers', '0006_alter_service_options_remove_service_parent'), ('customers', '0007_remove_customer_preferred_service_and_more'), ('customers', '0008_remove_customer_address_customer_address_old_and_more'), ('customers', '0009_alter_service_duration_minutes_alter_service_name_and_more'), ('customers', '0010_create_sample_services'), ('customers', '0011_customer_status_alter_customer_province'), ('customers', '0012_alter_customer_status'), ('customers', '0013_update_customer_status_choices'), ('customers', '0014_customer_duplicate_score'), ('customers', '0015_auto_20250918_1102'), ('customers', '0016_customer_is_merged'), ('customers', '0017_auto_20250918_1104'), ('customers', '0018_remove_customer_address_old_and_more'), ('customers', '0019_customer_status')]

    dependencies = [
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tên chi nhánh')),
                ('address', models.TextField(verbose_name='Địa chỉ')),
                ('phone', models.CharField(max_length=15, verbose_name='Số điện thoại')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Hoạt động')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branches', to=settings.AUTH_USER_MODEL, verbose_name='Quản lý')),
            ],
            options={
                'verbose_name': 'Chi nhánh',
                'verbose_name_plural': 'Chi nhánh',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tên dịch vụ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Mô tả')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Giá')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Thời gian (phút)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Hoạt động')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('level', models.CharField(default='Standard', max_length=50, verbose_name='Cấp độ')),
                ('level_number', models.PositiveSmallIntegerField(default=1, verbose_name='Cấp độ số')),
            ],
            options={
                'verbose_name': 'Dịch vụ',
                'verbose_name_plural': 'Dịch vụ',
                'ordering': ['name', 'level_number'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Tên')),
                ('last_name', models.CharField(max_length=100, verbose_name='Họ')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Số điện thoại')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('gender', models.CharField(choices=[('male', 'Nam'), ('female', 'Nữ'), ('other', 'Khác')], max_length=10, verbose_name='Giới tính')),
                ('date_of_birth', models.DateField(verbose_name='Ngày sinh')),
                ('medical_history', models.TextField(blank=True, null=True, verbose_name='Tiền sử bệnh')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Dị ứng')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Ghi chú')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.branch', verbose_name='Chi nhánh')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL, verbose_name='Tạo bởi')),
                ('services_used', models.ManyToManyField(blank=True, related_name='customers', to='customers.service', verbose_name='Dịch vụ sử dụng')),
                ('address_old', models.TextField(blank=True, null=True, verbose_name='Địa chỉ cũ')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.province', verbose_name='Tỉnh/Thành phố')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Số nhà, tên đường')),
                ('ward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.ward', verbose_name='Phường/Xã')),
            ],
            options={
                'verbose_name': 'Khách hàng',
                'verbose_name_plural': 'Khách hàng',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RunPython(
            code=create_sample_services,
            reverse_code=reverse_create_sample_services,
        ),
        migrations.AlterField(
            model_name='customer',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.province', verbose_name='Tỉnh/Thành'),
        ),
        migrations.AddField(
            model_name='customer',
            name='status',
            field=models.CharField(choices=[('active', 'Đang chăm sóc'), ('inactive', 'Ngưng chăm sóc'), ('success', 'Thành công')], default='active', max_length=20, verbose_name='Trạng thái'),
        ),
        migrations.RunSQL(
            sql='UPDATE customers_customer SET duplicate_score = 0.0 WHERE duplicate_score IS NULL;',
            reverse_sql='UPDATE customers_customer SET duplicate_score = NULL WHERE duplicate_score = 0.0;',
        ),
        migrations.RunSQL(
            sql='ALTER TABLE customers_customer ALTER COLUMN duplicate_score SET DEFAULT 0.0;',
            reverse_sql='ALTER TABLE customers_customer ALTER COLUMN duplicate_score DROP DEFAULT;',
        ),
        migrations.AddField(
            model_name='customer',
            name='duplicate_score',
            field=models.FloatField(default=0.0, verbose_name='Điểm trùng lặp'),
        ),
        migrations.RunSQL(
            sql='UPDATE customers_customer SET is_merged = false WHERE is_merged IS NULL;',
            reverse_sql='UPDATE customers_customer SET is_merged = NULL WHERE is_merged = false;',
        ),
        migrations.RunSQL(
            sql='ALTER TABLE customers_customer ALTER COLUMN is_merged SET DEFAULT false;',
            reverse_sql='ALTER TABLE customers_customer ALTER COLUMN is_merged DROP DEFAULT;',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='address_old',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='duplicate_score',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='status',
        ),
        migrations.AddField(
            model_name='customer',
            name='status',
            field=models.CharField(choices=[('active', 'Đang chăm sóc'), ('inactive', 'Ngưng chăm sóc'), ('success', 'Thành công')], default='active', max_length=20, verbose_name='Trạng thái'),
        ),
    ]
