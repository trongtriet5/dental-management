# Generated by Django 4.2.7 on 2025-09-12 18:06

from django.db import migrations
from django.contrib.auth import get_user_model

User = get_user_model()


def create_sample_users(apps, schema_editor):
    """Create sample users for testing"""
    
    # Create sample doctors
    doctors_data = [
        {
            'username': 'doctor1',
            'email': 'doctor1@clinic.com',
            'first_name': 'Nguyễn',
            'last_name': 'Văn A',
            'role': 'doctor',
            'specialization': 'Nha khoa tổng quát',
            'phone': '0123456789',
            'is_active': True,
        },
        {
            'username': 'doctor2',
            'email': 'doctor2@clinic.com',
            'first_name': 'Trần',
            'last_name': 'Thị B',
            'role': 'doctor',
            'specialization': 'Chỉnh nha',
            'phone': '0987654321',
            'is_active': True,
        },
        {
            'username': 'doctor3',
            'email': 'doctor3@clinic.com',
            'first_name': 'Lê',
            'last_name': 'Văn C',
            'role': 'doctor',
            'specialization': 'Phẫu thuật nha khoa',
            'phone': '0369258147',
            'is_active': True,
        }
    ]
    
    # Create sample receptionists
    receptionist_data = [
        {
            'username': 'receptionist1',
            'email': 'receptionist1@clinic.com',
            'first_name': 'Phạm',
            'last_name': 'Thị D',
            'role': 'receptionist',
            'phone': '0147258369',
            'is_active': True,
        },
        {
            'username': 'receptionist2',
            'email': 'receptionist2@clinic.com',
            'first_name': 'Hoàng',
            'last_name': 'Văn E',
            'role': 'receptionist',
            'phone': '0258147369',
            'is_active': True,
        }
    ]
    
    # Create sample managers
    manager_data = [
        {
            'username': 'manager1',
            'email': 'manager1@clinic.com',
            'first_name': 'Vũ',
            'last_name': 'Thị F',
            'role': 'manager',
            'phone': '0369258147',
            'is_active': True,
        }
    ]
    
    # Create users
    for user_data in doctors_data + receptionist_data + manager_data:
        if not User.objects.filter(username=user_data['username']).exists():
            user = User.objects.create_user(
                username=user_data['username'],
                email=user_data['email'],
                first_name=user_data['first_name'],
                last_name=user_data['last_name'],
                role=user_data['role'],
                phone=user_data['phone'],
                is_active=user_data['is_active'],
                password='123456'  # Default password
            )
            if user_data['role'] == 'doctor':
                user.specialization = user_data['specialization']
                user.save()
            print(f"Created user: {user.username} ({user.get_role_display()})")


def reverse_create_sample_users(apps, schema_editor):
    """Remove sample users"""
    User.objects.filter(username__in=[
        'doctor1', 'doctor2', 'doctor3',
        'receptionist1', 'receptionist2',
        'manager1'
    ]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_sample_users, reverse_create_sample_users),
    ]
