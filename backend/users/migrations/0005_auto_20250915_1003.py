# Generated by Django 4.2.7 on 2025-09-15 03:03

from django.db import migrations
from django.contrib.auth import get_user_model

User = get_user_model()


def update_sample_users(apps, schema_editor):
    """Update existing sample users to new role structure"""
    
    # Update existing staff users to receptionist
    User.objects.filter(username__in=['staff1', 'staff2', 'staff3']).update(role='receptionist')
    
    # Create new sample users with correct roles
    users_data = [
        {
            'username': 'admin1',
            'email': 'admin1@clinic.com',
            'first_name': 'Admin',
            'last_name': 'System',
            'role': 'admin',
            'phone': '0900000001',
            'is_active': True,
        },
        {
            'username': 'manager1',
            'email': 'manager1@clinic.com',
            'first_name': 'Nguyễn',
            'last_name': 'Thị Manager',
            'role': 'manager',
            'phone': '0900000002',
            'is_active': True,
        }
    ]
    
    for user_data in users_data:
        if not User.objects.filter(username=user_data['username']).exists():
            user = User.objects.create_user(
                username=user_data['username'],
                email=user_data['email'],
                first_name=user_data['first_name'],
                last_name=user_data['last_name'],
                role=user_data['role'],
                phone=user_data['phone'],
                is_active=user_data['is_active'],
                password='123456'  # Default password
            )
            print(f"Created user: {user.username} ({user.get_role_display()})")


def reverse_update_sample_users(apps, schema_editor):
    """Reverse the user updates"""
    User.objects.filter(username__in=['admin1', 'manager1']).delete()
    User.objects.filter(username__in=['staff1', 'staff2', 'staff3']).update(role='staff')


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0004_alter_user_role'),
    ]

    operations = [
        migrations.RunPython(update_sample_users, reverse_update_sample_users),
    ]
